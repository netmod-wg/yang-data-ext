# -*- org -*-

This document describes YANG mechanisms for
defining abstract data structures with YANG.
It is intended to replace and extend
the "yang-data" extension statement
defined in RFC 8040.

* Introduction

There is a need for standard mechanisms to allow the
definition of abstract data that is not intended to
be implemented as configuration or operational state.
The "yang-data" extension statement from RFC 8040 ^RFC8040^
is defined for this purpose, however it is limited in its
functionality.

The intended use of the "yang-data" extension is to model all or part
of a protocol message, such as the "errors" definition in
ietf-restconf.yang ^RFC8040^, or the contents of a file.  However,
protocols are often layered such that the header or payload portions
of the message can be extended by external documents. The YANG
statements that model a protocol need to support this extensibility
that is already found in that protocol.

This document defines a new YANG extension statement called
"augment-yang-data", which allows abstract data structures to be
augmented from external modules, similar to the existing YANG
"augment" statement.  Note that "augment" cannot be used to augment a
yang data structure since a YANG compiler or other tool is not
required to understand the "yang-data" extension.

The "yang-data" extension from ^RFC8040^ has been copied here and
updated to be more flexible. There is no longer a requirement for the
"yang-data" statement to result in exactly one container object.
There is no longer an assumption that a yang data structure can only
be used as a top-level abstraction, instead of nested within some
other data structure.


** Terminology

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
"OPTIONAL" in this document are to be interpreted as described in
BCP 14 ^RFC2119^ ^RFC8174^ when, and only when, they appear in all
capitals, as shown here.

The following terms are used within this document:

- YANG data structure: A data structure defined with the "yang-data"
  statement.

*** NMDA

The following terms are defined in the
Network Management Datastore Architecture
(NMDA) ^RFC8342^.
and are not redefined here:

- configuration
- operational state

*** YANG

The following terms are defined in ^RFC7950^:

- absolute-schema-nodeid
- container
- data definition statement
- data node
- leaf
- leaf-list
- list


# *** Terms
#
# The following terms are used within this document:
#
# *** Tree Diagrams
#
# A simplified graphical representation of the data model is used in
# this document.  The meaning of the symbols in these
# diagrams is defined in ^XXXX^.

* Definitions

** Restrictions on Conceptual YANG Data

This document places restrictions on the "yang-data" external
statements that can be used with the "yang-data" and
"augment-yang-data" extensions. The conceptual data definitions
are considered to be in the same identifier namespace
as defined in section 6.2.1 of ^RFC7950^. In particular,
bullet 7:

   All leafs, leaf-lists, lists, containers, choices, rpcs, actions,
   notifications, anydatas, and anyxmls defined (directly or through
   a "uses" statement) within a parent node or at the top level of
   the module or its submodules share the same identifier namespace.

This means that conceptual data defined with the "yang-data"
or "augment-yang-data" statements cannot have the same local-name
as sibling nodes from regular YANG data definition statements or
other "yang-data" or "augment-yang-data" statements.

This does not mean a YANG data structure has to be used as
a top-level protocol message or other top-level data structure.
A YANG data structure does not have to result in a single container.

** YANG Data Extensions Module @mod@

The "ietf-yang-data-ext" module defines the "augment-yang-data" extension
to augment conceptual data already defined with the
"yang-data" extension. The RESTCONF "yang-data" extension has been moved
to this document and updated.

RFC Ed.: update the date below with the date of RFC publication and
remove this note.

!! include-figure ietf-yang-data-ext.yang extract-to="ietf-yang-data-ext@2019-02-18.yang"

* IANA Considerations @iana@

** YANG Module Registry

This document registers one URI as a namespace in the
"IETF XML Registry" ^RFC3688^:

     URI: urn:ietf:params:xml:ns:yang:ietf-yang-data-ext
     Registrant Contact: The IESG.
     XML: N/A; the requested URI is an XML namespace.

This document registers one YANG module in the "YANG Module Names"
registry ^RFC6020^:

     name:         ietf-yang-data-ext
     namespace:    urn:ietf:params:xml:ns:yang:ietf-yang-data-ext
     prefix:       yd
     // RFC Ed.: replace XXXX with RFC number and remove this note
     reference:    RFC XXXX

* Security Considerations

This document defines YANG extensions that are used to define
conceptual YANG data.  It does not introduce any new vulnerabilities
beyond those specified in YANG 1.1 ^RFC7950^.

# * Acknowledgements

*! start-appendix

* Examples

** yang-data Example

This example shows a simple address book that could be
stored as an artifact.

   module example-module {
     ...

     import ietf-yang-data-ext {
       prefix yd;
     }

     yd:yang-data example-address-book {
       container address-book {
         list address {
           key "last first";
           leaf last {
             type string;
             description "Last name";
           }
           leaf first {
             type string;
             description "First name";
           }
           leaf street {
             type string;
             description "Street name";
           }
           leaf city {
             type string;
             description "City name";
           }
           leaf state {
             type string;
             description "State name";
           }
         }
       }
     }
   }

** augment-yang-data Example

This example adds "county" and "zipcode" leafs to
the address book:

   module example-module-aug {
     ...

     import ietf-yang-data-ext {
       prefix yd;
     }
     import example-module {
       prefix exm;
     }

     yd:augment-yang-data '/exm:example-address-book'
                        + '/exm:address-book/exm:address' {
       leaf county {
         type string;
         description "County name";
       }
       leaf zipcode {
         type string;
         description "Postal zipcode";
       }
     }
   }

* Change Log

RFC Ed.: remove this section before publication.

** v01 to v02

- terminology fixes (use the term "structure" instead of "template")
- removed limitations on if-feature and identities in YANG structures

** v00 to v01

- moved open issues to github
- added examples section
- filled in IANA considerations

* Open Issues

RFC Ed.: remove this section before publication.

The YANG Data Extensions issues are tracked on github.com:

   https://github.com/netmod-wg/yang-data-ext/issues


{{document:
    name ;
    ipr trust200902;
    category std;
    references references.xml;
    title "YANG Data Extensions";
    abbreviation "YANG Data Extensions";
    contributor "author:Andy Bierman:YumaWorks:andy@yumaworks.com";
    contributor "author:Martin Bjorklund:Tail-f Systems:mbj@tail-f.com";
    contributor "author:Kent Watsen:Juniper Networks:kwatsen@juniper.net";
}}
